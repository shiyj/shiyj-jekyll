---
title: usage of fossil
date: 26/01/2014
slug: usage-of-fossil
layout: post
author: 史英建
---

### 1.导入导出
git ===>  fossil

	git fast-export --all | fossil import --git newrepo.fossil
	
fossil ===>  git

	git init newrepo
	cd newrepo
	fossil export --git ../repo.fossil | git fast-import
	
### 2.功能介绍
#### 2.1迁出最新版本

	fossil open newrepo.fossil
	
该命令相当于迁出了最新的版本到本地，以下几个命令可以查看迁出版本的状态：

	fossil info
	fossil status
	fossil changes
	fossil diff
	fossil timeline
	fossil ls
	fossil branch

你可以将fossil迁出到不同的目录中，不过这样就有些太凌乱了……	
#### 2.2改变内容并提交
`add,rm,addremove`三个命令提供对文件的增加和删除操作；
`commit` 即可将其提交到版本库中（执行commit并不一定会push命令，具体需要设置异步状态。推荐关闭异步直接执行push）
#### 2.3同步
	push和pull来和远程同步；sync命令是将pull和push组合起来的命令：
	fossil push URL
	fossil pull URL
	fossil sync URL

需要注意的是，从远程同步过来内容只是在版本库内，如果要迁出到本地的工作目录下，需要执行update命令：

	fossil update [VERSION]
	
#### 2.4合并
	执行合并之前需要首先将要合并的的分支（目标分支）更新，之后执行merge命令，例如要把dev分支合并到master分支：

	fossil updata master
	fossil merge dev
	fossil commit

#### 2.5自建一个github?

	fossil 一个很吸引人的地方就是它自带的wiki、bug追踪、用户管理等功能。只需要一个简单的命令你就拥有了一个类似github的个人项目主页：
	fossil ui repo-name
	fossil server repo-name

### 3.使用实例
#### 3.1新建一个项目：
	fossil new test.fossil
#### 3.2打开版本库
fossil是可以将版本库和工作库分开在不同的目录下。此处我们采用在版本库同级目录下新建一个workspace文件夹来存放工作文件：

	mkdir workspace
	cd workspace
	workspace>fossil open ../test.fossil

	执行完open方法后会在目录下多出一个_FOSSIL_(windows)或者.fossil((L)Unix)文件用来记录工作库的状态。
#### 3.3添加文件
	随便在目录下增加一个文件，比如version.txt。写入文字信息后将其添加到版本管理中：

	fossil add .

	执行：`fossil status` 即可看到当前工作库的相关状态：

	repository:   D:/soft/fossil/test/workspace/../test.fossil
	local-root:   D:/soft/fossil/test/workspace/
	config-db:    C:/Users/Administrator/AppData/Local/_fossil
	checkout:     95121ec85a5ac89b574778b064c77c9fa34eb122 2014-01-08 02:33:28 UTC
	tags:         trunk
	comment:      initial empty check-in (user: Administrator)
	ADDED      version.txt

#### 3.4提交
	fossil commit -m "version 1"

执行后就将本地更改的内容提交到版本库中。
#### 3.5关闭
	fossil close

关闭是和打开对应的。打开是将版本库内的内容迁出到本地库，同时构建一个_FOSSIL_文件来维护版本库和工作库直接的关系；
而关闭则是去除版本库和工作库直接的联系（即删除_FOSSIL_文件），但是保留本地工作库中的文件。
如果再下次再次open版本库内容到当前工作目录时，会提示是否覆盖原内容，就和普通的复制粘贴一样。
#### 3.6通过web页面查看
	fossil ui ../test.fossil

执行完命令后会打开你的默认浏览器，并将当前项目的信息显示在浏览器中。
需要注意的是，我们提交到版本库内的代码、文本的编码最好是UTF-8，否则在web页面中查看时遇到中文等字符时会是乱码。
不过，如果不更改编码也可以，在版本控制器内的代码可以是任意你迁出到本地支持的编码。

Powered by [Engin](/about.html) & jekyll